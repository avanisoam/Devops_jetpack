1. Install WinSCP and PuTTY on Your Computer
2. Create a Droplet
3. Install openssh-server
  . sudo apt update
  . sudo apt install openssh-server
  . You will see this prompt:keep the local version currently installed.click enter
4. Connect with PuTTY. Enter ip address from digital ocean. login into putty terminal 
use I.P address, username: root, password: digital ocean password and login.
5.Accept and get into the putty terminal.
6.navigate to /home
7. $ mkdir flaskexample
8. $ cd flaskexample
9. $ sudo add-apt-repository ppa:deadsnakes/ppa    (https://tecadmin.net/how-to-install-python-3-9-on-ubuntu-20-04/)
10. $ sudo apt update 
11. $ sudo apt install python3.9 
12. $ python3.9 -V
13. $ sudo apt update
14. $ sudo apt install python3-pip
15. $ pip install flask
16. $ nano hello.py (paste code from https://github.com/Samvatsara2023/python3.11/blob/main/hello.py)
17. ctrl+X (in nano editor)
18. $ python3 hello.py
19. Install Nginx
20. $ sudo apt-get install nginx
21. $ sudo /etc/init.d/nginx start
22. We'll be changing the configuration of Nginx, so this command: $ sudo /etc/init.d/nginx reload
23. login in WinSCP with hostname(ip address), username: root password: digital ocean password
24. in WinSCP, navigate to /etc/nginx/site-available:And double-click on "default"
25.Edit the "location" configuration so it reads:

location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    # try_files $uri $uri/ =404;
    proxy_pass http://localhost:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection keep-alive;
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
}

26.Reload Nginx with: $ sudo /etc/init.d/nginx reload
27.The SSL Certificate with Certbot and LetsEncrypt
28. Update A name (@ and www) in domain name provider.(It can take 10 to 15 minutes).
29. In the meantime, you can install Certbot:(https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-22-04)
30. $ sudo snap install core; sudo snap refresh core
31. $ sudo apt remove certbot
32. $ sudo snap install --classic certbot
33. $ sudo ln -s /snap/bin/certbot /usr/bin/certbot
34. $ sudo nano /etc/nginx/sites-available/default
35. Allowing HTTPS Through the Firewall
36. $ ufw allow ssh
37. $ ufw enable
38. $ ufw allow http
39. $ ufw allow https
40. $ sudo ufw allow 'Nginx Full'
41. $ sudo ufw status
42. sudo certbot --nginx -d kunba.in -d www.kunba.in (sudo certbot --nginx -d example.com -d www.example.com)
43. Using WinSCP, create a service definition file in /etc/systemd/system: create new file om winscp : "testapi.service"
And paste the following code in this file.

Sample:(To be edited according to need):

----------------------------------------------------------
[Unit]
Description=Example .NET Web API App running on Ubuntu

[Service]
WorkingDirectory=/var/www/PUBLISH_DIRECTORY
ExecStart=/usr/bin/dotnet /var/www/MYAPP_DIRECTORY/STARUP_PROJECT_NAME.dll
Restart=always
# Restart service after 10 seconds if the dotnet service crashes:
RestartSec=10
KillSignal=SIGINT
SyslogIdentifier=dotnet-example
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false

[Install]
WantedBy=multi-user.target

----------------------------------------------------


Result:(What we did is):

-----------------------------------------------

[Unit]
Description=Example python Web API App running on Ubuntu

[Service]
WorkingDirectory=/home/flaskexample
ExecStart=/usr/bin/python3 /home/flaskexample/hello.py
Restart=always
# Restart service after 10 seconds if the dotnet service crashes:
RestartSec=10
KillSignal=SIGINT
SyslogIdentifier=dotnet-example
User=www-data
Environment=ASPNETCORE_ENVIRONMENT=Production
Environment=DOTNET_PRINT_TELEMETRY_MESSAGE=false

[Install]
WantedBy=multi-user.target

---------------------------------------------------------------------

44. $ sudo systemctl enable testapi.service
45. Start the service with: $ sudo systemctl start testapi.service

optional only if required:

46. If you need to stop the service, use: : $ sudo systemctl stop testapi.service (only if you want to stop the service)
47. Test that the service comes up after a reboot using: $ sudo reboot (only if required)


